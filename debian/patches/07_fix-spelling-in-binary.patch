Description: Fix spelling-error-in-binary found by lintian
Origin: vendor
Author: Alessandro Ghedini <ghedo@debian.org>
Reviewed-by: Alessandro Ghedini <ghedo@debian.org>
Last-Update: 2013-11-04

--- a/coregrind/m_commandline.c
+++ b/coregrind/m_commandline.c
@@ -66,7 +66,7 @@
    fd = VG_(open)(filename, 0, VKI_S_IRUSR);
    if ( !sr_isError(fd) ) {
       Int res = VG_(fstat)( sr_Res(fd), &stat_buf );
-      // Ignore if not owned by current user or world writeable (CVE-2008-4865)
+      // Ignore if not owned by current user or world writable (CVE-2008-4865)
       if (!res && stat_buf.uid == VG_(geteuid)()
           && (!(stat_buf.mode & VKI_S_IWOTH))) {
          if ( stat_buf.size > 0 ) {
--- a/coregrind/m_gdbserver/server.c
+++ b/coregrind/m_gdbserver/server.c
@@ -240,7 +240,7 @@
 "  v.do   expensive_sanity_check_general : do an expensive sanity check now\n"
 "  v.info gdbserver_status : show gdbserver status\n"
 "  v.info memory [aspacemgr] : show valgrind heap memory stats\n"
-"     (with aspacemgr arg, also shows valgrind segments on log ouput)\n"
+"     (with aspacemgr arg, also shows valgrind segments on log output)\n"
 "  v.info exectxt          : show stacktraces and stats of all execontexts\n"
 "  v.info scheduler        : show valgrind thread state and stacktrace\n"
 "  v.info stats            : show various valgrind and tool stats\n"
@@ -249,7 +249,7 @@
 "    Valgrind internal host status/memory\n"
 "  v.translate <addr> [<traceflags>]  : debug translation of <addr> with <traceflags>\n"
 "    (default traceflags 0b00100000 : show after instrumentation)\n"
-"   An additional flag  0b100000000 allows to show gdbserver instrumentation\n");
+"   An additional flag  0b100000000 allows one to show gdbserver instrumentation\n");
       }
       break;
    case  1: /* v.set */
--- a/VEX/priv/ir_defs.c
+++ b/VEX/priv/ir_defs.c
@@ -4430,7 +4430,7 @@
    if (bb->stmts_used < 0 || bb->stmts_size < 8
        || bb->stmts_used > bb->stmts_size)
       /* this BB is so strange we can't even print it */
-      vpanic("sanityCheckIRSB: stmts array limits wierd");
+      vpanic("sanityCheckIRSB: stmts array limits weird");
 
    /* Ensure each temp has a plausible type. */
    for (i = 0; i < n_temps; i++) {
--- a/gdbserver_tests/mchelp.stdoutB.exp
+++ b/gdbserver_tests/mchelp.stdoutB.exp
@@ -61,7 +61,7 @@
   v.do   expensive_sanity_check_general : do an expensive sanity check now
   v.info gdbserver_status : show gdbserver status
   v.info memory [aspacemgr] : show valgrind heap memory stats
-     (with aspacemgr arg, also shows valgrind segments on log ouput)
+     (with aspacemgr arg, also shows valgrind segments on log output)
   v.info exectxt          : show stacktraces and stats of all execontexts
   v.info scheduler        : show valgrind thread state and stacktrace
   v.info stats            : show various valgrind and tool stats
